/**
 * Breakpoints
 */
$breakpoints: (
        xs: 375px,
        s: 425px,
        m: 768px,
        l: 1024px,
        xl: 1440px,
        xxl: 2560px,
);

/**
 * Breakpoint Mixins
 */

/**
* Mixin for min-width media query
* @param {string} $size - The size of the breakpoint
 */
@mixin min-width($size) {
  @if map-has-key($breakpoints, $size) {
    $breakpoint: map-get($breakpoints, $size);
    @media (min-width: $breakpoint) {
      @content;
    }
  }
}

/**
* Mixin for max-width media query
* @param {string} $size - The size of the breakpoint
*/
@mixin max-width($size) {
  @if map-has-key($breakpoints, $size) {
    $breakpoint: map-get($breakpoints, $size);
    @media (max-width: $breakpoint - 0.02px) {
      @content;
    }
  }
}


/**
* Mixin for max-width media query
* @param {string} $size - The size of the breakpoint
 */
@mixin between-width($start, $end) {
  @if map-has-key($breakpoints, $start) and map-has-key($breakpoints, $end) {
    $breakpoint-start: map-get($breakpoints, $start);
    $breakpoint-end: map-get($breakpoints, $end);
    @media (min-width: $breakpoint-start) and (max-width: $breakpoint-end - 0.02px) {
      @content;
    }
  }
}

/**
* Mixin for max-width media query
* @param {string} $size - The size of the breakpoint
 */
@mixin exact-width($size) {
  @if map-has-key($breakpoints, $size) {
    $breakpoint: map-get($breakpoints, $size);
    $index: index(map-keys($breakpoints), $size);
    $next-breakpoint: if($index < length($breakpoints), nth(map-values($breakpoints), $index + 1), null);

    @if $next-breakpoint {
      @media (min-width: $breakpoint) and (max-width: $next-breakpoint - 0.02px) {
        @content;
      }
    } @else {
      @media (min-width: $breakpoint) {
        @content;
      }
    }
  }
}
