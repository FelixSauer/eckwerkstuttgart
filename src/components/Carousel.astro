---
import type {ImageMetadata} from "astro";
import {getImage, Image} from "astro:assets";
const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/Albums/*/*");
const imagePaths = Object.keys(images);
---

<div class="carousel">
    <div class="carousel-inner">
        <ul>
					{
						imagePaths.map(async (imagePath) => {
							let image = images[imagePath]();
							let optimizedImage = await getImage({
								src: image,
								width: 400,
								height: 300
							});

							return (
                      <li>

                          <Image
                                  src={image}
                                  alt={"altText"}
                                  width={400}
                                  height={300}
                          />

                      </li>
							);
						})
					}
        </ul>
    </div>
</div>


<style>
    .carousel {
        width: 100%;
        overflow: hidden;

        .carousel-inner {
            display: flex;
            width: max-content;
            animation: bannermove 360s linear infinite;

            & .break {
                -webkit-animation-play-state: paused;
                animation-play-state: paused;
            }

            ul {
                display: flex;
                list-style-type: none;
                padding-left: 0;
                margin: 0;

                li {

                    width: 400px;
                    height: 300px;
                    overflow: hidden;
                    object-fit: cover;
                    position: relative;
                    margin-right: 10px;

                    img {
                        width: 100%;
                        height: 100%;
                        object-fit: cover;
                        position: absolute;
                        top: 0;
                        left: 0;
                    }
                }
            }
        }
    }

    @keyframes bannermove {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(-50%);
        }
    }
</style>
