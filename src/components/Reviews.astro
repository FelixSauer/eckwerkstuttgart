---
const reviews = await fetchReviews();
async function fetchReviews() {
	const API_KEY = "AIzaSyAlDmSirID3ctmTbZn5-rJG6Z-ofXZCmws";
	const PLACE_ID = "ChIJ_erOoVuif6kRZSACbgSg1Ss";
	const url = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${PLACE_ID}&fields=reviews&language=de&key=${API_KEY}`;

	const response = await fetch(url);
	const data = await response.json();

	if (!response.ok) {
		throw new Error(data.error_message || 'Failed to fetch Google Reviews');
	}

	return data.result.reviews || [];
}

function renderStars(rating: number) {
	const fullStars = Math.floor(rating);
	const halfStar = rating % 1 >= 0.5 ? 1 : 0;
	const emptyStars = 5 - fullStars - halfStar;
	return '★'.repeat(fullStars) + '☆'.repeat(emptyStars);
}
---
<div class="reviews">
    <h2>Google Reviews</h2>
    <div class="carousel">
        <button class="carousel-control prev" onclick="prevSlide()">&#10094;</button>
        <div class="carousel-inner">
					{reviews.map((review: unkown) => (
                  <div class="carousel-item">
                      <a href={review.author_url} target="_blank">
                          <h3>{review.author_name}</h3>
                      </a>
                      <p>{renderStars(review.rating)} {review.relative_time_description}</p>
                      <p>{review.text}</p>
                  </div>
					))}
        </div>
        <button class="carousel-control next" onclick="nextSlide()">&#10095;</button>
    </div>
</div>

<style>
    .reviews {
        display: flex;
        flex-direction: column;
        gap: 8rem;
        padding: 1rem;

        .carousel {
            width: 100%;
            margin: auto;
            overflow-y: scroll;

            .carousel-inner {
                display: flex;
                transition: transform 0.5s ease;

                .carousel-item {
                    min-width: 100%;
                    box-sizing: border-box;
                    margin-right: 2rem;
                    padding: 5vw;

                    &:last-child {
                        padding-right: unset;
                    }
                }
            }
        }
    }
</style>

<script>
	let currentIndex = 0;

	function showSlide(index: number) {
		const slides = document.querySelectorAll('.carousel-item');
		if (index >= slides.length) {
			currentIndex = 0;
		} else if (index < 0) {
			currentIndex = slides.length - 1;
		} else {
			currentIndex = index;
		}
		const offset = -currentIndex * 100;
		//@ts-ignore
		document.querySelector('.carousel-inner').style.transform = `translateX(${offset}%)`;
	}

	function autoScroll() {
		setTimeout(autoScroll, 30000);
	}

	document.addEventListener('DOMContentLoaded', () => {
		showSlide(currentIndex);
		setTimeout(autoScroll, 3000);
	});
</script>
